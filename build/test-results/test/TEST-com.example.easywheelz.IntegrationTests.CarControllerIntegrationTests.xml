<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" tests="12" skipped="0" failures="0" errors="0" timestamp="2023-06-14T13:41:00" hostname="DESKTOP-41OPBTP" time="0.539">
  <properties/>
  <testcase name="getAllCarsReturnsEmptyTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.227"/>
  <testcase name="CreateCarCarTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.15"/>
  <testcase name="getAllBrands()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.019"/>
  <testcase name="uploadPictureTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.011"/>
  <testcase name="getAllCarsTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.017"/>
  <testcase name="getFillteredCarsTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.023"/>
  <testcase name="UpdateCarTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.018"/>
  <testcase name="DeleteCarNotAdminTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.016"/>
  <testcase name="UpdateCarNotAdminTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.01"/>
  <testcase name="DeleteCarTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.007"/>
  <testcase name="CreateCarCarTestNotAdmin()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.01"/>
  <testcase name="getCarTest()" classname="com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests" time="0.012"/>
  <system-out><![CDATA[15:40:49.575 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [CarControllerIntegrationTests]: using SpringBootContextLoader
15:40:49.592 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
15:40:49.595 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests]: CarControllerIntegrationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:40:49.718 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using ContextCustomizers for test class [CarControllerIntegrationTests]: [DisableObservabilityContextCustomizer, PropertyMappingContextCustomizer, Customizer, ImportsContextCustomizer, ExcludeFilterContextCustomizer, DuplicateJsonObjectContextCustomizer, MockitoContextCustomizer, TestRestTemplateContextCustomizer]
15:40:50.015 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\mario\Desktop\asdsad\easywheels\build\classes\java\main\com\example\easywheelz\EasyWheelzApplication.class]
15:40:50.018 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.easywheelz.EasyWheelzApplication for test class com.example.easywheelz.IntegrationTests.CarControllerIntegrationTests
15:40:50.361 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners for test class [CarControllerIntegrationTests]: [ServletTestExecutionListener, DirtiesContextBeforeModesTestExecutionListener, ApplicationEventsTestExecutionListener, MockitoTestExecutionListener, DependencyInjectionTestExecutionListener, DirtiesContextTestExecutionListener, TransactionalTestExecutionListener, SqlScriptsTestExecutionListener, WithSecurityContextTestExecutionListener, EventPublishingTestExecutionListener, ReactorContextTestExecutionListener, RestDocsTestExecutionListener, MockRestServiceServerResetTestExecutionListener, MockMvcPrintOnlyOnFailureTestExecutionListener, WebDriverTestExecutionListener, MockWebServiceServerTestExecutionListener, ResetMocksTestExecutionListener]
15:40:50.364 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: class [CarControllerIntegrationTests], class annotated with @DirtiesContext [false] with mode [null]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.3)

2023-06-14T15:40:51.124+02:00  INFO 5056 --- [    Test worker] c.e.e.I.CarControllerIntegrationTests    : Starting CarControllerIntegrationTests using Java 17.0.6 with PID 5056 (started by mario in C:\Users\mario\Desktop\asdsad\easywheels)
2023-06-14T15:40:51.126+02:00  INFO 5056 --- [    Test worker] c.e.e.I.CarControllerIntegrationTests    : No active profile set, falling back to 1 default profile: "default"
2023-06-14T15:40:52.998+02:00  INFO 5056 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-14T15:40:53.182+02:00  INFO 5056 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 165 ms. Found 4 JPA repository interfaces.
2023-06-14T15:40:55.070+02:00  INFO 5056 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityConfig' of type [com.example.easywheelz.configuration.security.MethodSecurityConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-14T15:40:55.364+02:00  INFO 5056 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-06-14T15:40:55.644+02:00  INFO 5056 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@150ba838
2023-06-14T15:40:55.648+02:00  INFO 5056 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-06-14T15:40:55.718+02:00  INFO 5056 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-06-14T15:40:55.835+02:00  INFO 5056 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
2023-06-14T15:40:56.229+02:00  WARN 5056 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 5.7.0. Check the community dialects project for available legacy versions.
2023-06-14T15:40:56.237+02:00  INFO 5056 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-06-14T15:40:57.394+02:00  INFO 5056 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-06-14T15:40:57.415+02:00  INFO 5056 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-14T15:40:59.220+02:00  WARN 5056 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-14T15:40:59.264+02:00  WARN 5056 --- [    Test worker] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: bec74836-7b52-4f78-bcb0-9a6fc6717050

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-06-14T15:40:59.451+02:00  INFO 5056 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5f74e914, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5fc900b8, org.springframework.security.web.context.SecurityContextHolderFilter@4ad51ab8, org.springframework.security.web.header.HeaderWriterFilter@7233c467, org.springframework.security.web.authentication.logout.LogoutFilter@3b1769a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3979d3b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6754ec0e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a390394, org.springframework.security.web.session.SessionManagementFilter@1e46b33b, org.springframework.security.web.access.ExceptionTranslationFilter@1a363c85]
2023-06-14T15:41:00.544+02:00  INFO 5056 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-14T15:41:00.544+02:00  INFO 5056 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-14T15:41:00.546+02:00  INFO 5056 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2023-06-14T15:41:00.566+02:00  INFO 5056 --- [    Test worker] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2023-06-14T15:41:00.568+02:00  INFO 5056 --- [    Test worker] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@5248ad52]]
2023-06-14T15:41:00.570+02:00  INFO 5056 --- [    Test worker] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2023-06-14T15:41:00.585+02:00  INFO 5056 --- [    Test worker] c.e.e.I.CarControllerIntegrationTests    : Started CarControllerIntegrationTests in 10.113 seconds (process running for 13.697)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /cars
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.easywheelz.controller.CarController
           Method = com.example.easywheelz.controller.CarController#getAllCars()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = []
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /cars/brands
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.easywheelz.controller.CarController
           Method = com.example.easywheelz.controller.CarController#getAllAvailableCars()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = ["mustang","ferrari"]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /cars/brands
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.easywheelz.controller.CarController
           Method = com.example.easywheelz.controller.CarController#getAllAvailableCars()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = ["mustang","ferrari"]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /cars
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.easywheelz.controller.CarController
           Method = com.example.easywheelz.controller.CarController#getAllCars()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = [{"id":1,"licensePlate":"AB-12f4","model":"Chevrolet","brand":"Corvette","pricePerDay":150.0,"color":"Red","photoUrl":null,"availability":false},{"id":1,"licensePlate":"AB-12f4","model":"Chevrolet","brand":"Corvette","pricePerDay":150.0,"color":"Red","photoUrl":null,"availability":false}]
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /cars/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.example.easywheelz.controller.CarController
           Method = com.example.easywheelz.controller.CarController#getCar(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":1,"licensePlate":"AB-12f4","model":"Chevrolet","brand":"Corvette","pricePerDay":150.0,"color":"Red","photoUrl":null,"availability":false}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
