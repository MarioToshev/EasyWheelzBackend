plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "4.0.0.2929"
    id "jacoco"


}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


sonar {
    properties {
        property "sonar.projectKey", "EasyWheelzAnalytics"
        property "sonar.projectName", "EasyWheelzAnalytics"
        property "sonar.qualitygate.wait", true
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.glassfish:jakarta.el:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-validator:8.0.0.Final'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport{
    dependsOn test
    reports{
        xml.enabled(true)
    }
}